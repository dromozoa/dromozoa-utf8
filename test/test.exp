return {
  {n=2,true,"[\0-\127¬-Ù][Ä-ø]*"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=2,true,"Ùèøø"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=2,true,"\0Ùèøø"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=2,true,"ABC"};
  {n=2,true,"AB"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: invalid UTF-8 code"};
  {n=2,false,"test/test.lua:39: invalid UTF-8 code"};
  {n=3,true,1,8802};
  {n=2,false,"test/test.lua:39: invalid UTF-8 code"};
  {n=2,false,"test/test.lua:39: invalid UTF-8 code"};
  {n=2,false,"test/test.lua:39: invalid UTF-8 code"};
  {n=2,false,"test/test.lua:39: invalid UTF-8 code"};
  {n=2,false,"test/test.lua:39: invalid UTF-8 code"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got nil)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=3,true,54,53};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,true,"AAA"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"AA\0"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"AA\1"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"AA\1"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,true,"AA\1"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,true,"A\0A"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"A\0\0"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"A\0\1"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"A\0\1"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,true,"A\0\1"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,true,"A\1A"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"A\1\0"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"A\1\1"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=3,true,54,53};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"A\1\1"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"A\1\1"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,true,53};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,true,53};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=3,true,54,53};
  {n=2,true,2};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,true,"A\1A"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"A\1\0"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"A\1\1"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=3,true,54,53};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"A\1\1"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"A\1\1"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,true,"A\1A"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"A\1\0"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"A\1\1"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=3,true,54,53};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=5,true,1,54,2,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"A\1\1"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"A\1\1"};
  {n=5,true,1,54,2,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=5,true,1,54,2,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,4};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=5,true,54,53,46,53};
  {n=2,true,4};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=4,true,54,53,46};
  {n=2,true,3};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,4};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,4};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=5,true,54,53,46,53};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=4,true,54,53,46};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,53};
  {n=2,true,1};
  {n=2,true,4};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,53};
  {n=2,true,1};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,46};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=3,true,46,53};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,46};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,4};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=5,true,54,53,46,53};
  {n=2,true,4};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=4,true,54,53,46};
  {n=2,true,3};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,4};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=5,true,54,53,46,53};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=4,true,54,53,46};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,4};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=5,true,54,53,46,53};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=4,true,54,53,46};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,true,54};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,54,2,53,3,46,4,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,true,"\0AA"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\0A\0"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\0A\1"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\0A\1"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,true,"\0A\1"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,true,"\0\0A"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\0\0\0"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\0\0\1"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\0\0\1"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,true,"\0\0\1"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\0\1A"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\0\1\0"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\0\1\1"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\0\1\1"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\0\1\1"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\0\1A"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\0\1\0"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\0\1\1"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\0\1\1"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\0\1\1"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\0\1A"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\0\1\0"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\0\1\1"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,48};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\0\1\1"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\0\1\1"};
  {n=3,true,1,48};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,48};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,true,"\1AA"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1A\0"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1A\1"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1A\1"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,true,"\1A\1"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,true,"\1\0A"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\0\0"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\0\1"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\0\1"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,true,"\1\0\1"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1A"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\1\0"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1A"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\1\0"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1A"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\1\0"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,3};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=4,true,49,46,53};
  {n=2,true,3};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=3,true,49,46};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,3};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=4,true,49,46,53};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=3,true,49,46};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,53};
  {n=2,true,1};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,53};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,46};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=3,true,46,53};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,46};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,3};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=4,true,49,46,53};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=3,true,49,46};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,3};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=4,true,49,46,53};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=3,true,49,46};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number has no integer representation)"};
  {n=7,true,1,49,2,46,3,53};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=3,true,45,49};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=3,true,45,49};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=3,true,45,49};
  {n=2,true,2};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=3,true,45,49};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=3,true,45,49};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=3,true,45,50};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=3,true,45,50};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,50};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,50};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=3,true,45,50};
  {n=2,true,2};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=3,true,45,50};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=3,true,45,50};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,50};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=3,true,45,52};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=3,true,45,52};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,52};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,52};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=3,true,45,52};
  {n=2,true,2};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=3,true,45,52};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=3,true,45,52};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,true,45};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (value out of range)"};
  {n=5,true,1,45,2,52};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,3};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=4,true,102,111,111};
  {n=2,true,3};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=3,true,102,111};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,3};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=4,true,102,111,111};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=3,true,102,111};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,111};
  {n=2,true,1};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,111};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,111};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=3,true,111,111};
  {n=2,true,2};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,111};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,3};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=4,true,102,111,111};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=3,true,102,111};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,3};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=4,true,102,111,111};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=3,true,102,111};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,true,102};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got string)"};
  {n=7,true,1,102,2,111,3,111};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,true,"\1AA"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1A\0"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1A\1"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1A\1"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,true,"\1A\1"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,true,"\1\0A"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\0\0"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\0\1"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\0\1"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,true,"\1\0\1"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1A"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\1\0"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1A"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\1\0"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1A"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\1\0"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=3,true,1,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1\1"};
  {n=3,true,1,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=3,true,1,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,4};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=5,true,48,120,48,49};
  {n=2,true,4};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=4,true,48,120,48};
  {n=2,true,3};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got nil)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,true,"\1AA"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1A\0"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1A\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1A\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,true,"\1A\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,true,"\1\0A"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\0\0"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\0\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\0\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,true,"\1\0\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,4};
  {n=2,true,1};
  {n=2,true,"\1\1A"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\1\0"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\1\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=5,true,48,120,48,49};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=4,true,48,120,48};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\1\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,4};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,49};
  {n=2,true,1};
  {n=2,true,3};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=3,true,48,49};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,4};
  {n=2,true,1};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=5,true,48,120,48,49};
  {n=2,true,4};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=4,true,48,120,48};
  {n=2,true,3};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,4};
  {n=2,true,1};
  {n=2,true,"\1\1A"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\1\0"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\1\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=5,true,48,120,48,49};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=4,true,48,120,48};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\1\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got nil)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,4};
  {n=2,true,1};
  {n=2,true,"\1\1A"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,true,"\1\1\0"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=1,true};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"\1\1\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number has no integer representation)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number has no integer representation)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=5,true,48,120,48,49};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=4,true,48,120,48};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.char' (value out of range)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got string)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got string)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got string)"};
  {n=2,true,"\1\1\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,"\1\1\1"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,true,48};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #3 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got boolean)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got boolean)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.char' (number expected, got table)"};
  {n=9,true,1,48,2,120,3,48,4,49};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (number expected, got table)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got boolean)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got boolean)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.char' (number expected, got table)"};
  {n=2,false,"test/test.lua:39: bad argument #1 to 'codes' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.codepoint' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.len' (string expected, got table)"};
  {n=2,false,"bad argument #1 to 'utf8.offset' (string expected, got table)"};
  {n=2,true,""};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,0};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got no value)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"A‚â¢Œë."};
  {n=9,true,1,65,2,8802,5,913,7,46};
  {n=2,true,65};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,true,65};
  {n=1,true};
  {n=1,true};
  {n=2,true,65};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=4,true,65,8802,913};
  {n=4,true,65,8802,913};
  {n=5,true,65,8802,913,46};
  {n=1,true};
  {n=2,true,65};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=4,true,65,8802,913};
  {n=4,true,65,8802,913};
  {n=5,true,65,8802,913,46};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,8802};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=3,true,8802,913};
  {n=3,true,8802,913};
  {n=4,true,8802,913,46};
  {n=1,true};
  {n=1,true};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=3,true,8802,913};
  {n=3,true,8802,913};
  {n=4,true,8802,913,46};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,913};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,913};
  {n=2,true,913};
  {n=3,true,913,46};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,913};
  {n=2,true,913};
  {n=3,true,913,46};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,46};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,46};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,46};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,true,65};
  {n=1,true};
  {n=1,true};
  {n=2,true,65};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=4,true,65,8802,913};
  {n=4,true,65,8802,913};
  {n=5,true,65,8802,913,46};
  {n=1,true};
  {n=2,true,65};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=4,true,65,8802,913};
  {n=4,true,65,8802,913};
  {n=5,true,65,8802,913,46};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,8802};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=3,true,8802,913};
  {n=3,true,8802,913};
  {n=4,true,8802,913,46};
  {n=1,true};
  {n=1,true};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=3,true,8802,913};
  {n=3,true,8802,913};
  {n=4,true,8802,913,46};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,913};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,913};
  {n=2,true,913};
  {n=3,true,913,46};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,913};
  {n=2,true,913};
  {n=3,true,913,46};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,46};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,46};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,46};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,4};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got no value)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,5};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,5};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,8};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,8};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"ÌïúÍµ≠Ïñ¥"};
  {n=7,true,1,54620,4,44397,7,50612};
  {n=2,true,54620};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,true,54620};
  {n=1,true};
  {n=1,true};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=1,true};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,44397};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,50612};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,true,54620};
  {n=1,true};
  {n=1,true};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=1,true};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,44397};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,50612};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,3};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,8};
  {n=3,true,nil,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,8};
  {n=3,true,nil,8};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,8};
  {n=3,true,nil,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,8};
  {n=3,true,nil,8};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got no value)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,10};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,10};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,10};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"Êó•Êú¨Ë™û"};
  {n=7,true,1,26085,4,26412,7,35486};
  {n=2,true,26085};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,true,26085};
  {n=1,true};
  {n=1,true};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=1,true};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,26412};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,35486};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,true,26085};
  {n=1,true};
  {n=1,true};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=1,true};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,26412};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,35486};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,3};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,8};
  {n=3,true,nil,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,8};
  {n=3,true,nil,8};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,8};
  {n=3,true,nil,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,8};
  {n=3,true,nil,8};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got no value)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,10};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,10};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,10};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,10};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"Ôªø£é¥"};
  {n=5,true,1,65279,4,144308};
  {n=2,true,65279};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,true,65279};
  {n=1,true};
  {n=1,true};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=1,true};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,true,65279};
  {n=1,true};
  {n=1,true};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=1,true};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,2};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,7};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,7};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,7};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=3,true,nil,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=3,true,nil,5};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,7};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,7};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,7};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got no value)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,4};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,"A‚â¢Œë.ÌïúÍµ≠Ïñ¥Êó•Êú¨Ë™ûÔªø£é¥"};
  {n=25,true,1,65,2,8802,5,913,7,46,8,54620,11,44397,14,50612,17,26085,20,26412,23,35486,26,65279,29,144308};
  {n=2,true,65};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,true,65};
  {n=1,true};
  {n=1,true};
  {n=2,true,65};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=4,true,65,8802,913};
  {n=4,true,65,8802,913};
  {n=5,true,65,8802,913,46};
  {n=6,true,65,8802,913,46,54620};
  {n=6,true,65,8802,913,46,54620};
  {n=6,true,65,8802,913,46,54620};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=2,true,65};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=4,true,65,8802,913};
  {n=4,true,65,8802,913};
  {n=5,true,65,8802,913,46};
  {n=6,true,65,8802,913,46,54620};
  {n=6,true,65,8802,913,46,54620};
  {n=6,true,65,8802,913,46,54620};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,8802};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=3,true,8802,913};
  {n=3,true,8802,913};
  {n=4,true,8802,913,46};
  {n=5,true,8802,913,46,54620};
  {n=5,true,8802,913,46,54620};
  {n=5,true,8802,913,46,54620};
  {n=6,true,8802,913,46,54620,44397};
  {n=6,true,8802,913,46,54620,44397};
  {n=6,true,8802,913,46,54620,44397};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=3,true,8802,913};
  {n=3,true,8802,913};
  {n=4,true,8802,913,46};
  {n=5,true,8802,913,46,54620};
  {n=5,true,8802,913,46,54620};
  {n=5,true,8802,913,46,54620};
  {n=6,true,8802,913,46,54620,44397};
  {n=6,true,8802,913,46,54620,44397};
  {n=6,true,8802,913,46,54620,44397};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,913};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,913};
  {n=2,true,913};
  {n=3,true,913,46};
  {n=4,true,913,46,54620};
  {n=4,true,913,46,54620};
  {n=4,true,913,46,54620};
  {n=5,true,913,46,54620,44397};
  {n=5,true,913,46,54620,44397};
  {n=5,true,913,46,54620,44397};
  {n=6,true,913,46,54620,44397,50612};
  {n=6,true,913,46,54620,44397,50612};
  {n=6,true,913,46,54620,44397,50612};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,913};
  {n=2,true,913};
  {n=3,true,913,46};
  {n=4,true,913,46,54620};
  {n=4,true,913,46,54620};
  {n=4,true,913,46,54620};
  {n=5,true,913,46,54620,44397};
  {n=5,true,913,46,54620,44397};
  {n=5,true,913,46,54620,44397};
  {n=6,true,913,46,54620,44397,50612};
  {n=6,true,913,46,54620,44397,50612};
  {n=6,true,913,46,54620,44397,50612};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,46};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,46};
  {n=3,true,46,54620};
  {n=3,true,46,54620};
  {n=3,true,46,54620};
  {n=4,true,46,54620,44397};
  {n=4,true,46,54620,44397};
  {n=4,true,46,54620,44397};
  {n=5,true,46,54620,44397,50612};
  {n=5,true,46,54620,44397,50612};
  {n=5,true,46,54620,44397,50612};
  {n=6,true,46,54620,44397,50612,26085};
  {n=6,true,46,54620,44397,50612,26085};
  {n=6,true,46,54620,44397,50612,26085};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,46};
  {n=3,true,46,54620};
  {n=3,true,46,54620};
  {n=3,true,46,54620};
  {n=4,true,46,54620,44397};
  {n=4,true,46,54620,44397};
  {n=4,true,46,54620,44397};
  {n=5,true,46,54620,44397,50612};
  {n=5,true,46,54620,44397,50612};
  {n=5,true,46,54620,44397,50612};
  {n=6,true,46,54620,44397,50612,26085};
  {n=6,true,46,54620,44397,50612,26085};
  {n=6,true,46,54620,44397,50612,26085};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,54620};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=5,true,54620,44397,50612,26085};
  {n=5,true,54620,44397,50612,26085};
  {n=5,true,54620,44397,50612,26085};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=5,true,54620,44397,50612,26085};
  {n=5,true,54620,44397,50612,26085};
  {n=5,true,54620,44397,50612,26085};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,44397};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=4,true,44397,50612,26085};
  {n=4,true,44397,50612,26085};
  {n=4,true,44397,50612,26085};
  {n=5,true,44397,50612,26085,26412};
  {n=5,true,44397,50612,26085,26412};
  {n=5,true,44397,50612,26085,26412};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=4,true,44397,50612,26085};
  {n=4,true,44397,50612,26085};
  {n=4,true,44397,50612,26085};
  {n=5,true,44397,50612,26085,26412};
  {n=5,true,44397,50612,26085,26412};
  {n=5,true,44397,50612,26085,26412};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,50612};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=3,true,50612,26085};
  {n=3,true,50612,26085};
  {n=3,true,50612,26085};
  {n=4,true,50612,26085,26412};
  {n=4,true,50612,26085,26412};
  {n=4,true,50612,26085,26412};
  {n=5,true,50612,26085,26412,35486};
  {n=5,true,50612,26085,26412,35486};
  {n=5,true,50612,26085,26412,35486};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=3,true,50612,26085};
  {n=3,true,50612,26085};
  {n=3,true,50612,26085};
  {n=4,true,50612,26085,26412};
  {n=4,true,50612,26085,26412};
  {n=4,true,50612,26085,26412};
  {n=5,true,50612,26085,26412,35486};
  {n=5,true,50612,26085,26412,35486};
  {n=5,true,50612,26085,26412,35486};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,26085};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=5,true,26085,26412,35486,65279};
  {n=5,true,26085,26412,35486,65279};
  {n=5,true,26085,26412,35486,65279};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=5,true,26085,26412,35486,65279};
  {n=5,true,26085,26412,35486,65279};
  {n=5,true,26085,26412,35486,65279};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,26412};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=4,true,26412,35486,65279};
  {n=4,true,26412,35486,65279};
  {n=4,true,26412,35486,65279};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=4,true,26412,35486,65279};
  {n=4,true,26412,35486,65279};
  {n=4,true,26412,35486,65279};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,35486};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=3,true,35486,65279};
  {n=3,true,35486,65279};
  {n=3,true,35486,65279};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=3,true,35486,65279};
  {n=3,true,35486,65279};
  {n=3,true,35486,65279};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,65279};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #2 to 'utf8.codepoint' (out of range)"};
  {n=2,true,65};
  {n=1,true};
  {n=1,true};
  {n=2,true,65};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=4,true,65,8802,913};
  {n=4,true,65,8802,913};
  {n=5,true,65,8802,913,46};
  {n=6,true,65,8802,913,46,54620};
  {n=6,true,65,8802,913,46,54620};
  {n=6,true,65,8802,913,46,54620};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=2,true,65};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=3,true,65,8802};
  {n=4,true,65,8802,913};
  {n=4,true,65,8802,913};
  {n=5,true,65,8802,913,46};
  {n=6,true,65,8802,913,46,54620};
  {n=6,true,65,8802,913,46,54620};
  {n=6,true,65,8802,913,46,54620};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=7,true,65,8802,913,46,54620,44397};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=8,true,65,8802,913,46,54620,44397,50612};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=9,true,65,8802,913,46,54620,44397,50612,26085};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,65,8802,913,46,54620,44397,50612,26085,26412};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,65,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=13,true,65,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,8802};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=3,true,8802,913};
  {n=3,true,8802,913};
  {n=4,true,8802,913,46};
  {n=5,true,8802,913,46,54620};
  {n=5,true,8802,913,46,54620};
  {n=5,true,8802,913,46,54620};
  {n=6,true,8802,913,46,54620,44397};
  {n=6,true,8802,913,46,54620,44397};
  {n=6,true,8802,913,46,54620,44397};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=2,true,8802};
  {n=3,true,8802,913};
  {n=3,true,8802,913};
  {n=4,true,8802,913,46};
  {n=5,true,8802,913,46,54620};
  {n=5,true,8802,913,46,54620};
  {n=5,true,8802,913,46,54620};
  {n=6,true,8802,913,46,54620,44397};
  {n=6,true,8802,913,46,54620,44397};
  {n=6,true,8802,913,46,54620,44397};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=7,true,8802,913,46,54620,44397,50612};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=8,true,8802,913,46,54620,44397,50612,26085};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=9,true,8802,913,46,54620,44397,50612,26085,26412};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,8802,913,46,54620,44397,50612,26085,26412,35486};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=12,true,8802,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,913};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,913};
  {n=2,true,913};
  {n=3,true,913,46};
  {n=4,true,913,46,54620};
  {n=4,true,913,46,54620};
  {n=4,true,913,46,54620};
  {n=5,true,913,46,54620,44397};
  {n=5,true,913,46,54620,44397};
  {n=5,true,913,46,54620,44397};
  {n=6,true,913,46,54620,44397,50612};
  {n=6,true,913,46,54620,44397,50612};
  {n=6,true,913,46,54620,44397,50612};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,913};
  {n=2,true,913};
  {n=3,true,913,46};
  {n=4,true,913,46,54620};
  {n=4,true,913,46,54620};
  {n=4,true,913,46,54620};
  {n=5,true,913,46,54620,44397};
  {n=5,true,913,46,54620,44397};
  {n=5,true,913,46,54620,44397};
  {n=6,true,913,46,54620,44397,50612};
  {n=6,true,913,46,54620,44397,50612};
  {n=6,true,913,46,54620,44397,50612};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=7,true,913,46,54620,44397,50612,26085};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=8,true,913,46,54620,44397,50612,26085,26412};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,913,46,54620,44397,50612,26085,26412,35486};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,913,46,54620,44397,50612,26085,26412,35486,65279};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=11,true,913,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,46};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,46};
  {n=3,true,46,54620};
  {n=3,true,46,54620};
  {n=3,true,46,54620};
  {n=4,true,46,54620,44397};
  {n=4,true,46,54620,44397};
  {n=4,true,46,54620,44397};
  {n=5,true,46,54620,44397,50612};
  {n=5,true,46,54620,44397,50612};
  {n=5,true,46,54620,44397,50612};
  {n=6,true,46,54620,44397,50612,26085};
  {n=6,true,46,54620,44397,50612,26085};
  {n=6,true,46,54620,44397,50612,26085};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,46};
  {n=3,true,46,54620};
  {n=3,true,46,54620};
  {n=3,true,46,54620};
  {n=4,true,46,54620,44397};
  {n=4,true,46,54620,44397};
  {n=4,true,46,54620,44397};
  {n=5,true,46,54620,44397,50612};
  {n=5,true,46,54620,44397,50612};
  {n=5,true,46,54620,44397,50612};
  {n=6,true,46,54620,44397,50612,26085};
  {n=6,true,46,54620,44397,50612,26085};
  {n=6,true,46,54620,44397,50612,26085};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=7,true,46,54620,44397,50612,26085,26412};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=8,true,46,54620,44397,50612,26085,26412,35486};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,46,54620,44397,50612,26085,26412,35486,65279};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=10,true,46,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,54620};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=5,true,54620,44397,50612,26085};
  {n=5,true,54620,44397,50612,26085};
  {n=5,true,54620,44397,50612,26085};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=2,true,54620};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=3,true,54620,44397};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=4,true,54620,44397,50612};
  {n=5,true,54620,44397,50612,26085};
  {n=5,true,54620,44397,50612,26085};
  {n=5,true,54620,44397,50612,26085};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=6,true,54620,44397,50612,26085,26412};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=7,true,54620,44397,50612,26085,26412,35486};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=8,true,54620,44397,50612,26085,26412,35486,65279};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=9,true,54620,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,44397};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=4,true,44397,50612,26085};
  {n=4,true,44397,50612,26085};
  {n=4,true,44397,50612,26085};
  {n=5,true,44397,50612,26085,26412};
  {n=5,true,44397,50612,26085,26412};
  {n=5,true,44397,50612,26085,26412};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=2,true,44397};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=3,true,44397,50612};
  {n=4,true,44397,50612,26085};
  {n=4,true,44397,50612,26085};
  {n=4,true,44397,50612,26085};
  {n=5,true,44397,50612,26085,26412};
  {n=5,true,44397,50612,26085,26412};
  {n=5,true,44397,50612,26085,26412};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=6,true,44397,50612,26085,26412,35486};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=7,true,44397,50612,26085,26412,35486,65279};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=8,true,44397,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,50612};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=3,true,50612,26085};
  {n=3,true,50612,26085};
  {n=3,true,50612,26085};
  {n=4,true,50612,26085,26412};
  {n=4,true,50612,26085,26412};
  {n=4,true,50612,26085,26412};
  {n=5,true,50612,26085,26412,35486};
  {n=5,true,50612,26085,26412,35486};
  {n=5,true,50612,26085,26412,35486};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=2,true,50612};
  {n=3,true,50612,26085};
  {n=3,true,50612,26085};
  {n=3,true,50612,26085};
  {n=4,true,50612,26085,26412};
  {n=4,true,50612,26085,26412};
  {n=4,true,50612,26085,26412};
  {n=5,true,50612,26085,26412,35486};
  {n=5,true,50612,26085,26412,35486};
  {n=5,true,50612,26085,26412,35486};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=6,true,50612,26085,26412,35486,65279};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=7,true,50612,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,26085};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=5,true,26085,26412,35486,65279};
  {n=5,true,26085,26412,35486,65279};
  {n=5,true,26085,26412,35486,65279};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=2,true,26085};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=3,true,26085,26412};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=4,true,26085,26412,35486};
  {n=5,true,26085,26412,35486,65279};
  {n=5,true,26085,26412,35486,65279};
  {n=5,true,26085,26412,35486,65279};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=6,true,26085,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,26412};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=4,true,26412,35486,65279};
  {n=4,true,26412,35486,65279};
  {n=4,true,26412,35486,65279};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=2,true,26412};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=3,true,26412,35486};
  {n=4,true,26412,35486,65279};
  {n=4,true,26412,35486,65279};
  {n=4,true,26412,35486,65279};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=5,true,26412,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,35486};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=3,true,35486,65279};
  {n=3,true,35486,65279};
  {n=3,true,35486,65279};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=2,true,35486};
  {n=3,true,35486,65279};
  {n=3,true,35486,65279};
  {n=3,true,35486,65279};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=4,true,35486,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,65279};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=2,true,65279};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=3,true,65279,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,true,144308};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"invalid UTF-8 code"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=1,true};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.codepoint' (out of range)"};
  {n=2,true,12};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,12};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,11};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,10};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,10};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,7};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,12};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,13};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,15};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,16};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,18};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,19};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,21};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,22};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,24};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,25};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,27};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,28};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,30};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,30};
  {n=3,true,nil,30};
  {n=3,true,nil,30};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,30};
  {n=3,true,nil,30};
  {n=3,true,nil,30};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,31};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,31};
  {n=3,true,nil,31};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,31};
  {n=3,true,nil,31};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,32};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,32};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,32};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,true,12};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,true,12};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,11};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=3,true,nil,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=3,true,nil,4};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,10};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,true,10};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=3,true,nil,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,true,9};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=3,true,nil,9};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,10};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=3,true,nil,10};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,7};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,12};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=3,true,nil,12};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,13};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=3,true,nil,13};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,true,6};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,15};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=3,true,nil,15};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,16};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=3,true,nil,16};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,18};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=3,true,nil,18};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,19};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=3,true,nil,19};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,true,4};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,21};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=3,true,nil,21};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,22};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=3,true,nil,22};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,true,3};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,24};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=3,true,nil,24};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,25};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=3,true,nil,25};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,27};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=3,true,nil,27};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,28};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=3,true,nil,28};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,30};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,30};
  {n=3,true,nil,30};
  {n=3,true,nil,30};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,30};
  {n=3,true,nil,30};
  {n=3,true,nil,30};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,31};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,31};
  {n=3,true,nil,31};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,31};
  {n=3,true,nil,31};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=3,true,nil,32};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,32};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=3,true,nil,32};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,true,0};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #3 to 'utf8.len' (final position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.len' (initial position out of string)"};
  {n=2,false,"bad argument #2 to 'utf8.offset' (number expected, got no value)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,5};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,11};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,14};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,17};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,20};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,23};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,26};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,29};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true,1};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,14};
  {n=2,true,14};
  {n=2,true,14};
  {n=2,true,17};
  {n=2,true,17};
  {n=2,true,17};
  {n=2,true,20};
  {n=2,true,20};
  {n=2,true,20};
  {n=2,true,23};
  {n=2,true,23};
  {n=2,true,23};
  {n=2,true,26};
  {n=2,true,26};
  {n=2,true,26};
  {n=2,true,29};
  {n=2,true,29};
  {n=2,true,29};
  {n=2,true,29};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,8};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,11};
  {n=2,true,14};
  {n=2,true,14};
  {n=2,true,14};
  {n=2,true,17};
  {n=2,true,17};
  {n=2,true,17};
  {n=2,true,20};
  {n=2,true,20};
  {n=2,true,20};
  {n=2,true,23};
  {n=2,true,23};
  {n=2,true,23};
  {n=2,true,26};
  {n=2,true,26};
  {n=2,true,26};
  {n=2,true,29};
  {n=2,true,29};
  {n=2,true,29};
  {n=2,true,29};
  {n=2,true,33};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,1};
  {n=2,true,2};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,2};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,2};
  {n=2,true,5};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,5};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,5};
  {n=2,true,7};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,7};
  {n=2,true,8};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,8};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,8};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,8};
  {n=2,true,11};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,11};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,11};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,11};
  {n=2,true,14};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,14};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,14};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,14};
  {n=2,true,17};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,17};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,17};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,17};
  {n=2,true,20};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,20};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,20};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,20};
  {n=2,true,23};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,23};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,23};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,23};
  {n=2,true,26};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,26};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,26};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,26};
  {n=2,true,29};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,29};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,29};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,29};
  {n=2,true,33};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,33};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,33};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true,33};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,false,"initial position is a continuation byte"};
  {n=2,true};
  {n=2,false,"bad argument #3 to 'utf8.offset' (position out of range)"};
}
